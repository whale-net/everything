name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # Test job - builds and tests in one step for better cache utilization
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Build Environment
      uses: ./.github/actions/setup-build-env
      with:
        cache-suffix: 'test'
        setup-docker: 'true'
        bazel-remote-cache-url: ${{ secrets.BAZEL_REMOTE_CACHE_URL }}
        bazel-remote-cache-user: ${{ secrets.BAZEL_REMOTE_CACHE_USER }}
        bazel-remote-cache-password: ${{ secrets.BAZEL_REMOTE_CACHE_PASSWORD }}
        
    - name: Run tests
      run: |
        # Run all tests and let Bazel handle caching
        bazel test //...
        
    - name: Run Docker image build smoke test
      run: |
        echo "Running smoke test to validate image building works..."
        echo "This tests representative Python and Go apps to ensure the build system is functional."
        echo ""
        
        # Run the smoke test
        bazel test //:test_image_build_smoke --test_output=all
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: bazel-testlogs/
        retention-days: 7

  # Build summary - required for branch protection rules
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate CI summary
      run: |
        echo "=== CI Build Summary ===" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        TEST_JOB_RESULT="${{ needs.test.result }}"
        
        echo "**Job Results:**" >> $GITHUB_STEP_SUMMARY
        echo "- Test (including smoke test): $TEST_JOB_RESULT" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "$TEST_JOB_RESULT" == "success" ]]; then
          echo "✅ **Overall Status: PASSED**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All tests passed, including Docker image build smoke tests." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Smoke test validated:**" >> $GITHUB_STEP_SUMMARY
          echo "- demo/hello_python (Python with uv)" >> $GITHUB_STEP_SUMMARY
          echo "- demo/hello_go (Go with static binaries)" >> $GITHUB_STEP_SUMMARY
          exit 0
        else
          echo "❌ **Overall Status: FAILED**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "One or more tests failed. Review the test job logs for details." >> $GITHUB_STEP_SUMMARY
          echo "::error::CI pipeline failed"
          exit 1
        fi
        
