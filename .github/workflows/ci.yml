name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # Test job - builds and tests in one step for better cache utilization
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Build Environment
      uses: ./.github/actions/setup-build-env
      with:
        cache-suffix: 'test'
        bazel-remote-cache-url: ${{ secrets.BAZEL_REMOTE_CACHE_URL }}
        bazel-remote-cache-user: ${{ secrets.BAZEL_REMOTE_CACHE_USER }}
        bazel-remote-cache-password: ${{ secrets.BAZEL_REMOTE_CACHE_PASSWORD }}
        
    - name: Run tests
      run: |
        # Run all tests and let Bazel handle caching
        bazel test //...
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: bazel-testlogs/
        retention-days: 7

  # Smoke test for Docker image building
  # Validates that the image building system works by building representative
  # Python and Go images instead of building all changed apps
  docker-smoke-test:
    name: Docker Image Build Smoke Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Build Environment
      uses: ./.github/actions/setup-build-env
      with:
        setup-docker: 'true'
        cache-suffix: 'docker-smoke'
        bazel-remote-cache-url: ${{ secrets.BAZEL_REMOTE_CACHE_URL }}
        bazel-remote-cache-user: ${{ secrets.BAZEL_REMOTE_CACHE_USER }}
        bazel-remote-cache-password: ${{ secrets.BAZEL_REMOTE_CACHE_PASSWORD }}
        
    - name: Run Docker image build smoke test
      run: |
        echo "Running smoke test to validate image building works..."
        echo "This tests representative Python and Go apps to ensure the build system is functional."
        echo ""
        
        # Run the smoke test
        bazel test //:test_image_build_smoke --test_output=all
        
    - name: Generate smoke test summary
      if: always()
      run: |
        echo "=== Docker Image Build Smoke Test Summary ===" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This test validates that the container image build system works" >> $GITHUB_STEP_SUMMARY
        echo "by building and running representative Python and Go applications." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Apps tested:**" >> $GITHUB_STEP_SUMMARY
        echo "- demo/hello_python (Python with uv)" >> $GITHUB_STEP_SUMMARY
        echo "- demo/hello_go (Go with static binaries)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ $? -eq 0 ]; then
          echo "✅ **Status: PASSED**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The image build system is working correctly." >> $GITHUB_STEP_SUMMARY
          echo "All apps should be able to build images successfully." >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Status: FAILED**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The smoke test failed. Review the logs above for details." >> $GITHUB_STEP_SUMMARY
          echo "::error::Docker image build smoke test failed"
        fi
        
