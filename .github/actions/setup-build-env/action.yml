name: 'Setup Build Environment'
description: 'Sets up Bazel, Python, Go, and Docker for CI/CD workflows'
branding:
  icon: 'settings'
  color: 'green'

inputs:
  setup-docker:
    description: 'Whether to setup Docker Buildx'
    required: false
    default: 'false'
  cache-suffix:
    description: 'Suffix to add to cache keys for isolation'
    required: false
    default: ''
  tool-optimization:
    description: 'Enable tool-specific optimizations for faster builds'
    required: false
    default: 'false'

outputs:
  bazel-cache-hit:
    description: 'Whether Bazel cache was hit'
    value: ${{ steps.setup-bazel.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: Setup Bazel with Multi-Layered Caching
      id: setup-bazel
      uses: bazel-contrib/setup-bazel@0.15.0
      with:
        # Enable global caching for Bazel binaries and dependencies
        bazelisk-cache: true
        repository-cache: true
        # Simple disk cache - isolated by cache suffix
        disk-cache: ${{ inputs.cache-suffix || 'true' }}

    - name: Set up Docker Buildx
      if: ${{ inputs.setup-docker == 'true' }}
      uses: docker/setup-buildx-action@v3

    - name: Configure Bazel for tool optimization
      if: ${{ inputs.tool-optimization == 'true' || contains(inputs.cache-suffix, 'tools') }}
      shell: bash
      run: |
        echo "Configuring Bazel for optimized tool builds..."
        # Export tool-specific configuration
        echo "build --config=tools" >> ~/.bazelrc.user
        echo "Tool optimization enabled for faster builds"