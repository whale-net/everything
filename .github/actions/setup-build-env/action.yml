name: 'Setup Build Environment'
description: 'Sets up Bazel, Python, Go, and Docker for CI/CD workflows'
branding:
  icon: 'settings'
  color: 'green'

inputs:
  setup-docker:
    description: 'Whether to setup Docker Buildx'
    required: false
    default: 'false'
  cache-suffix:
    description: 'Suffix to add to cache keys for isolation'
    required: false
    default: ''
  bazel-remote-cache-url:
    description: 'HTTP URL for Bazel remote cache from secrets'
    required: false
    default: ''
  bazel-remote-cache-user:
    description: 'Username for remote cache basic auth from secrets'
    required: false
    default: ''
  bazel-remote-cache-password:
    description: 'Password for remote cache basic auth from secrets'
    required: false
    default: ''

outputs:
  bazel-cache-hit:
    description: 'Whether Bazel cache was hit'
    value: ${{ steps.setup-bazel.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: Setup Remote Cache Environment
      shell: bash
      run: |
        # Configure remote cache if URL is provided via inputs from secrets
        if [[ -n "${{ inputs.bazel-remote-cache-url }}" ]]; then
          echo "Setting up Bazel remote cache..."
          
          # Set the remote cache URL from input
          CACHE_URL="${{ inputs.bazel-remote-cache-url }}"
          
          # Add basic auth credentials if provided via inputs from secrets
          if [[ -n "${{ inputs.bazel-remote-cache-user }}" && -n "${{ inputs.bazel-remote-cache-password }}" ]]; then
            # Extract protocol and host from URL
            PROTOCOL=$(echo "$CACHE_URL" | sed -n 's#^\([^:]*\)://.*#\1#p')
            HOST_PATH=$(echo "$CACHE_URL" | sed -n 's#^[^:]*://\(.*\)#\1#p')
            
            # Construct URL with basic auth
            CACHE_URL="${PROTOCOL}://${{ inputs.bazel-remote-cache-user }}:${{ inputs.bazel-remote-cache-password }}@${HOST_PATH}"
          fi
          
          # Create .bazelrc.remote file with remote cache configuration
          cat > .bazelrc.remote << EOF
        # Remote cache configuration (auto-generated)
        build --remote_cache=${CACHE_URL}
        build --remote_upload_local_results=true
        build:ci --remote_cache=${CACHE_URL}
        build:ci --remote_upload_local_results=true
        EOF
          
          echo "âœ… Remote cache configured at: ${{ inputs.bazel-remote-cache-url }}"
        else
          echo "No remote cache URL provided, using local caching only"
          # Remove any existing .bazelrc.remote file to ensure clean state
          rm -f .bazelrc.remote
        fi

    - name: Setup Bazel with Multi-Layered Caching
      id: setup-bazel
      uses: bazel-contrib/setup-bazel@0.15.0
      with:
        # Enable global caching for Bazel binaries and dependencies
        bazelisk-cache: true
        repository-cache: true
        # External repositories caching - cache all repos >10MB automatically
        external-cache: true
        # Disk cache - isolated by cache suffix for better hit rates
        disk-cache: ${{ inputs.cache-suffix || 'true' }}

    - name: Set up Docker Buildx
      if: ${{ inputs.setup-docker == 'true' }}
      uses: docker/setup-buildx-action@v3