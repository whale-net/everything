load("@rules_python//python:defs.bzl", "py_library", "py_test")
load("@pip_deps_dev//:requirements.bzl", "requirement")
load("//tools:python_binary.bzl", "multiplatform_py_binary")
load("//tools:release.bzl", "release_app")

py_library(
    name = "main_lib",
    srcs = ["__init__.py", "main.py"],
    deps = [],
    visibility = ["//demo/hello_worker:__pkg__"],
)

# Single macro generates all platform-specific binaries
multiplatform_py_binary(
    name = "hello_worker",
    srcs = ["main.py"],
    main = "main.py",
    deps = [
        ":main_lib",
    ],
    requirements = [],  # No external requirements for this simple app
    visibility = ["//visibility:public"],
)

py_test(
    name = "test_main",
    srcs = ["test_main.py"],
    deps = [
        ":main_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Simplified release_app - auto-detects platform binaries!
release_app(
    name = "hello_worker",
    language = "python",
    app_type = "worker",  # Explicitly set as worker
    domain = "demo",
    registry = "ghcr.io",
    version = "1.0.0",
    description = "Background worker example - no service exposure",
)
