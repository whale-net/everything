"""
Example Kubernetes manifests for deploying FastAPI application with api_deployment configuration.

This demonstrates how to deploy a FastAPI application using the api_deployment
module in a Kubernetes environment.
"""

apiVersion: v1
kind: Namespace
metadata:
  name: demo-apis
  labels:
    name: demo-apis

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-fastapi-config
  namespace: demo-apis
data:
  LOG_LEVEL: "info"
  WORKERS: "2"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-fastapi
  namespace: demo-apis
  labels:
    app: hello-fastapi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-fastapi
  template:
    metadata:
      labels:
        app: hello-fastapi
    spec:
      containers:
      - name: api
        image: demo-hello-fastapi:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args:
          - "demo/hello_fastapi/main_with_deployment.py"
          - "--production"
          - "--workers"
          - "$(WORKERS)"
          - "--log-level"
          - "$(LOG_LEVEL)"
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: hello-fastapi-config
              key: LOG_LEVEL
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: hello-fastapi-config
              key: WORKERS
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3

---

apiVersion: v1
kind: Service
metadata:
  name: hello-fastapi
  namespace: demo-apis
  labels:
    app: hello-fastapi
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: hello-fastapi

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-fastapi
  namespace: demo-apis
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: hello-fastapi.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hello-fastapi
            port:
              number: 8000
