{{/*
Multi-app deployment template
Generates deployments for all enabled apps in the domain
*/}}
{{- $domain := .Values.domain }}
{{- range $appName, $appConfig := index .Values $domain "apps" }}
{{- if $appConfig.enabled }}
{{- $appContext := dict "Values" $.Values "Chart" $.Chart "Release" $.Release "appName" $appName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "multiapp.fullname" $appContext }}
  labels:
    {{- include "multiapp.appLabels" $appContext | nindent 4 }}
spec:
  replicas: {{ $appConfig.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "multiapp.selectorLabels" $appContext | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "multiapp.appLabels" $appContext | nindent 8 }}
      annotations:
        # Force restart on config changes
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
    spec:
      serviceAccountName: {{ include "multiapp.serviceAccountName" $appContext }}
      containers:
      - name: {{ $appName }}
        image: {{ include "multiapp.image" $appContext }}
        imagePullPolicy: {{ $appConfig.imagePullPolicy | default "IfNotPresent" }}
        {{- if $appConfig.command }}
        command:
        {{- if kindIs "string" $appConfig.command }}
        - {{ $appConfig.command }}
        {{- else }}
        {{- toYaml $appConfig.command | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if $appConfig.args }}
        args:
        {{- toYaml $appConfig.args | nindent 8 }}
        {{- end }}
        {{- if or $appConfig.port $.Values.service.enabled }}
        ports:
        - name: http
          containerPort: {{ $appConfig.port | default 8000 }}
          protocol: TCP
        {{- end }}
        env:
        {{- include "multiapp.appEnv" $appContext | nindent 8 }}
        {{- if $appConfig.livenessProbe }}
        livenessProbe:
          {{- toYaml $appConfig.livenessProbe | nindent 10 }}
        {{- else if $appConfig.port }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        {{- end }}
        {{- if $appConfig.readinessProbe }}
        readinessProbe:
          {{- toYaml $appConfig.readinessProbe | nindent 10 }}
        {{- else if $appConfig.port }}
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- end }}
        {{- if include "multiapp.resources" $appContext }}
        resources:
          {{- include "multiapp.resources" $appContext | nindent 10 }}
        {{- end }}
        {{- if $appConfig.volumeMounts }}
        volumeMounts:
        {{- toYaml $appConfig.volumeMounts | nindent 8 }}
        {{- end }}
      {{- if $appConfig.volumes }}
      volumes:
      {{- toYaml $appConfig.volumes | nindent 6 }}
      {{- end }}
      {{- if $appConfig.nodeSelector }}
      nodeSelector:
        {{- toYaml $appConfig.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $appConfig.tolerations }}
      tolerations:
        {{- toYaml $appConfig.tolerations | nindent 8 }}
      {{- end }}
      {{- if $appConfig.affinity }}
      affinity:
        {{- toYaml $appConfig.affinity | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}