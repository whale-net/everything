# Tools and shared build rules for the monorepo

load("@rules_python//python:defs.bzl", "py_binary")

package(default_visibility = ["//visibility:public"])

exports_files([
    "oci.bzl",
    "helm_chart_release.bzl",
    "python_runner.py",
    "platforms.bzl",
    "container_image.bzl",
])

# Cross-compilation verification test
# Verifies that multiplatform images contain correct architecture-specific wheels
sh_test(
    name = "test_cross_compilation",
    size = "large",
    srcs = ["test_cross_compilation.sh"],
    data = [
        "//demo/hello_fastapi:hello_fastapi_image",
    ],
    tags = [
        "manual",  # Don't run with //...
        "integration",  # Integration test, not unit test
        "no-cache",  # Always run, never cache
    ],
    timeout = "long",
)

# Version resolver utility for Helm charts
py_binary(
    name = "version_resolver",
    srcs = ["version_resolver.py"],
    main = "version_resolver.py",
    visibility = ["//visibility:public"],
)

load(":platforms.bzl", "define_platforms")

define_platforms()

# Platform detection for release helper selection
config_setting(
    name = "on_macos_arm64",
    constraint_values = [
        "@platforms//os:macos",
        "@platforms//cpu:arm64",
    ],
)

config_setting(
    name = "on_macos_x86_64",
    constraint_values = [
        "@platforms//os:macos",
        "@platforms//cpu:x86_64",
    ],
)

config_setting(
    name = "on_linux_arm64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
)

# Note: Both arm64 and aarch64 configs are provided for compatibility.
# Different Bazel configurations and toolchains may use either naming convention.
# Both point to the same ARM64 architecture to ensure the correct binary is selected.
config_setting(
    name = "on_linux_aarch64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

config_setting(
    name = "on_linux_x86_64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

# Convenient alias for release helper
# Uses the standard binary - no platform-specific targets needed
alias(
    name = "release",
    actual = "//tools/release_helper:release_helper",
    visibility = ["//visibility:public"],
)
