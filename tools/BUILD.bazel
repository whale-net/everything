# Tools and shared build rules for the monorepo

load("//tools:python_binary.bzl", "multiplatform_py_binary")
load("//tools:release.bzl", "release_app")

package(default_visibility = ["//visibility:public"])

exports_files([
    "oci.bzl",
    "helm_chart_release.bzl",
    "python_runner.py",
    "platforms.bzl",
    "container_image.bzl",
])

# Cross-compilation verification test
# This test is marked as "manual" so it doesn't run with `bazel test //...`
# It requires Docker and breaks the Bazel sandbox (calls bazel build/run internally)
# CI explicitly runs this test to ensure cross-compilation works correctly
sh_test(
    name = "test_cross_compilation",
    size = "large",
    srcs = ["test_cross_compilation.sh"],
    tags = [
        "manual",  # Don't run with //...
        "requires-network",  # Needs Docker and external bazel invocations
        "integration",  # Integration test, not unit test
    ],
    timeout = "long",
)

# Version resolver utility for Helm charts
multiplatform_py_binary(
    name = "version_resolver",
    srcs = ["version_resolver.py"],
    main = "version_resolver.py",
    visibility = ["//visibility:public"],
)

load(":platforms.bzl", "define_platforms")

define_platforms()

# Convenient alias for release helper (automatically selects correct platform)
alias(
    name = "release",
    actual = select({
        "@platforms//cpu:aarch64": "//tools/release_helper:release_helper_linux_arm64",
        "@platforms//cpu:arm64": "//tools/release_helper:release_helper_linux_arm64",
        "//conditions:default": "//tools/release_helper:release_helper_linux_amd64",
    }),
    visibility = ["//visibility:public"],
)

# Release metadata and OCI images for the release tool
release_app(
    name = "release",
    binary_name = "//tools/release_helper:release_helper",
    language = "python",
    domain = "tools",
    description = "Release helper tool for managing app releases and container images",
)
