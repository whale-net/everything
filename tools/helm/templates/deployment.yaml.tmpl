{{- range $appName, $app := .Values.apps }}
{{- if or (eq $app.type "external-api") (eq $app.type "internal-api") (eq $app.type "worker") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appName }}-{{ $.Values.global.environment }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ $appName }}-{{ $.Values.global.environment }}
    component: {{ $app.type }}
  annotations:
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: {{ $app.replicas }}
  selector:
    matchLabels:
      app: {{ $appName }}-{{ $.Values.global.environment }}
  template:
    metadata:
      namespace: {{ $.Values.global.namespace }}
      labels:
        app: {{ $appName }}-{{ $.Values.global.environment }}
        component: {{ $app.type }}
    spec:
      containers:
        - name: {{ $appName }}
          image: "{{ $app.image }}:{{ $app.imageTag }}"
          resources:
            requests:
              cpu: {{ $app.resources.requests.cpu }}
              memory: {{ $app.resources.requests.memory }}
            limits:
              cpu: {{ $app.resources.limits.cpu }}
              memory: {{ $app.resources.limits.memory }}
          {{- if or (eq $app.type "external-api") (eq $app.type "internal-api") }}
          ports:
            - containerPort: {{ $app.port }}
              name: http
          {{- end }}
          {{- if $app.command }}
          command:
            {{- range $app.command }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if $app.args }}
          args:
            {{- range $app.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if and $app.healthCheck (or (eq $app.type "external-api") (eq $app.type "internal-api")) }}
          livenessProbe:
            httpGet:
              path: {{ $app.healthCheck.path }}
              port: {{ $app.port }}
            initialDelaySeconds: {{ $app.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ $app.healthCheck.periodSeconds }}
            timeoutSeconds: {{ $app.healthCheck.timeoutSeconds }}
            failureThreshold: {{ $app.healthCheck.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ $app.healthCheck.path }}
              port: {{ $app.port }}
            initialDelaySeconds: {{ $app.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ $app.healthCheck.periodSeconds }}
            timeoutSeconds: {{ $app.healthCheck.timeoutSeconds }}
            failureThreshold: {{ $app.healthCheck.failureThreshold }}
          {{- else if and $app.healthCheck (eq $app.type "worker") }}
          {{- /* Workers may have health endpoints but on a different port */ -}}
          livenessProbe:
            httpGet:
              path: {{ $app.healthCheck.path }}
              port: {{ default 8000 $app.healthCheck.port }}
            initialDelaySeconds: {{ $app.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ default 20 $app.healthCheck.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ $app.healthCheck.path }}
              port: {{ default 8000 $app.healthCheck.port }}
            initialDelaySeconds: {{ $app.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ $app.healthCheck.periodSeconds }}
            timeoutSeconds: {{ $app.healthCheck.timeoutSeconds }}
            failureThreshold: {{ $app.healthCheck.failureThreshold }}
          {{- end }}
          env:
            # Application metadata (from release_app + Helm)
            - name: APP_NAME
              value: {{ $appName | quote }}
            - name: APP_DOMAIN
              value: {{ $app.domain | default $.Values.global.domain | quote }}
            - name: APP_TYPE
              value: {{ $app.type | quote }}
            - name: APP_VERSION
              value: {{ $app.imageTag | quote }}
            - name: APP_ENV
              value: {{ $.Values.global.environment | quote }}
            - name: ENVIRONMENT
              value: {{ $.Values.global.environment | quote }}
            {{- if $app.commitSha }}
            - name: GIT_COMMIT
              value: {{ $app.commitSha | quote }}
            - name: COMMIT_SHA
              value: {{ $app.commitSha | quote }}
            {{- end }}
            
            # Kubernetes context (downward API)
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CONTAINER_NAME
              value: {{ $appName | quote }}
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            
            # Helm context
            - name: HELM_CHART_NAME
              value: {{ $.Chart.Name | quote }}
            - name: HELM_RELEASE_NAME
              value: {{ $.Release.Name | quote }}
            
            # OpenTelemetry configuration
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ $.Values.otlp.endpoint | default "http://otel-collector:4317" | quote }}
            - name: OTEL_SERVICE_NAME
              value: {{ $appName | quote }}
            
            # Platform metadata
            - name: PLATFORM
              value: "linux/amd64"  # Can be templated based on node selector
            - name: ARCHITECTURE
              value: "amd64"  # Can be templated based on node selector
            
            {{- if $app.env }}
            # Additional app-specific environment variables
            {{- range $key, $value := $app.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
{{- end }}
{{- end }}
