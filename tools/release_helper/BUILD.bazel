# Release helper package
load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("//tools/bazel:pytest.bzl", "py_test")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")

package(default_visibility = ["//visibility:public"])

# Release helper library
py_library(
    name = "release_helper_lib",
    srcs = glob(["*.py"], exclude = ["test_*.py"]),
    deps = [
        "@pypi//:typer",
        "@pypi//:pyyaml",
        "@pypi//:httpx",
    ],
)

# Release helper tool for managing app releases and container images
py_binary(
    name = "release_helper",
    srcs = ["cli.py"],
    main = "cli.py",
    deps = [":release_helper_lib"],
)

# Unit tests for metadata module
py_test(
    name = "test_metadata",
    srcs = ["test_metadata.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for git module
py_test(
    name = "test_git",
    srcs = ["test_git.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for git operations in changes module
py_test(
    name = "test_changes_git",
    srcs = ["test_changes_git.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Integration tests using pytest-git
py_test(
    name = "test_git_integration",
    srcs = ["test_git_integration.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
        "@pypi//:pytest-git",
    ],
    size = "medium",
)

# Unit tests for validation module
py_test(
    name = "test_validation",
    srcs = ["test_validation.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for core module  
py_test(
    name = "test_core",
    srcs = ["test_core.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for images module
py_test(
    name = "test_images",
    srcs = ["test_images.py"],
    deps = [
        ":images",
        ":core",
    ],
    # These are integration tests that call bazel commands.
    # They require a working bazel installation and cannot be mocked effectively
    # due to module import timing issues with pytest fixtures.
    tags = ["manual", "integration"],
)

# Unit tests for release module
py_test(
    name = "test_release",
    srcs = ["test_release.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for summary module
py_test(
    name = "test_summary",
    srcs = ["test_summary.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for github release module
py_test(
    name = "test_github_release",
    srcs = ["test_github_release.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
    tags = ["manual", "integration"],  # Requires httpx and external HTTP calls
)

# Unit tests for release notes module
py_test(
    name = "test_release_notes",
    srcs = ["test_release_notes.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for helm unpublish functionality
py_test(
    name = "test_helm_unpublish",
    srcs = ["test_helm_unpublish.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for helm app version resolution
py_test(
    name = "test_helm_app_versions",
    srcs = ["test_helm_app_versions.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
    tags = ["manual", "integration"],  # Requires bazel commands to run
)

# Unit tests for exclude demo domain functionality
py_test(
    name = "test_exclude_demo",
    srcs = ["test_exclude_demo.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)

# Unit tests for CLI OpenAPI builds command
py_test(
    name = "test_cli_openapi",
    srcs = ["test_cli_openapi.py"],
    deps = [
        ":release_helper_lib",
        "@pypi//:pytest",
    ],
    size = "small",
)
