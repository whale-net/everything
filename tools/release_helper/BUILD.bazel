# Release helper package
load("@rules_python//python:defs.bzl", "py_library", "py_test")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@pip_deps_dev//:requirements.bzl", "requirement")
load("//tools:python_binary.bzl", "multiplatform_py_binary")

package(default_visibility = ["//visibility:public"])

# Release helper library
py_library(
    name = "release_helper_lib",
    srcs = glob(
        ["*.py", "**/*.py"], 
        exclude = ["test_*.py", "**/test_*.py"]
    ),
    deps = [
        requirement("typer"),
        requirement("pyyaml"),
        requirement("httpx"),
    ],
)

# Release helper tool for managing app releases and container images
multiplatform_py_binary(
    name = "release_helper",
    srcs = ["cli.py"],
    deps = [":release_helper_lib"],
    main = "cli.py",
    requirements = ["typer", "pyyaml", "httpx"],
)

# Helm composer CLI tool (Python replacement for Go version)
multiplatform_py_binary(
    name = "helm_composer",
    srcs = ["charts/composer.py"],
    deps = [":release_helper_lib"],
    main = "charts/composer.py",
    requirements = ["pyyaml"],
)

# Unit tests for metadata module
py_test(
    name = "test_metadata",
    srcs = ["test_metadata.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for git module
py_test(
    name = "test_git",
    srcs = ["test_git.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for git operations in changes module
py_test(
    name = "test_changes_git",
    srcs = ["test_changes_git.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Integration tests using pytest-git
py_test(
    name = "test_git_integration",
    srcs = ["test_git_integration.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
        requirement("pytest-git"),
    ],
    size = "medium",
)

# Unit tests for validation module
py_test(
    name = "test_validation",
    srcs = ["test_validation.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for core module  
py_test(
    name = "test_core",
    srcs = ["test_core.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for images module
py_test(
    name = "test_images",
    srcs = ["test_images.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for release module
py_test(
    name = "test_release",
    srcs = ["test_release.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for summary module
py_test(
    name = "test_summary",
    srcs = ["test_summary.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for bazel change detection
py_test(
    name = "test_bazel_change_detection",
    srcs = ["test_bazel_change_detection.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for github release module
py_test(
    name = "test_github_release",
    srcs = ["test_github_release.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)

# Unit tests for release notes module
py_test(
    name = "test_release_notes",
    srcs = ["test_release_notes.py"],
    deps = [
        ":release_helper_lib",
        requirement("pytest"),
    ],
    size = "small",
)