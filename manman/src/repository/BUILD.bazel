load("@rules_python//python:defs.bzl", "py_library", "py_test")

# Repository core layer (database and API client)
py_library(
    name = "repository_core",
    srcs = [
        "__init__.py",
        "api_client.py",
        "database.py",
        "workerdal.py",
    ],
    visibility = ["//manman/src/repository:__subpackages__"],
    deps = [
        "//manman/src:manman_core",
        "//manman/src/repository/message",
        "//manman/src/repository/rabbitmq",
        "@pypi//:sqlmodel",
        "@pypi//:asyncpg",
        "@pypi//:httpx",
        "@pypi//:alembic",
        "@pypi//:opentelemetry-instrumentation-sqlalchemy",
        "@pypi//:requests",
        "@pypi//:python-jose",
    ],
)

# Combined repository library (for backward compatibility)
py_library(
    name = "manman_repository",
    visibility = ["//manman:__subpackages__"],
    deps = [
        ":repository_core",
        "//manman/src/repository/message",
        "//manman/src/repository/rabbitmq",
    ],
)

# Database repository tests
py_test(
    name = "database_repository_test",
    srcs = ["database_repository_test.py"],
    main = "database_repository_test.py",
    deps = [
        ":repository_core",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
        "@pypi//:sqlalchemy",
    ],
    size = "small",
)

# Validator tests
py_test(
    name = "validator_test",
    srcs = ["validator_test.py"],
    main = "validator_test.py",
    deps = [
        ":repository_core",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
    ],
    size = "small",
)