load("@rules_python//python:defs.bzl", "py_library", "py_test")

# Database access layer library
py_library(
    name = "manman_repository_database",
    srcs = [
        "database.py",
        "workerdal.py",
        "__init__.py",
    ],
    visibility = ["//manman:__subpackages__"],
    deps = [
        "//manman/src:manman_core",
        "@pypi//:sqlmodel",
        "@pypi//:asyncpg",
        "@pypi//:alembic",
        "@pypi//:opentelemetry-instrumentation-sqlalchemy",
    ],
)

# RabbitMQ infrastructure library - defined in subdirectory
# See manman/src/repository/rabbitmq/BUILD.bazel
alias(
    name = "manman_repository_rabbitmq",
    actual = "//manman/src/repository/rabbitmq:manman_repository_rabbitmq",
    visibility = ["//manman:__subpackages__"],
)

# Message pub/sub services library - defined in subdirectory
# See manman/src/repository/message/BUILD.bazel
alias(
    name = "manman_repository_message",
    actual = "//manman/src/repository/message:manman_repository_message",
    visibility = ["//manman:__subpackages__"],
)

# API client library for external calls
py_library(
    name = "manman_repository_api_client",
    srcs = ["api_client.py"],
    visibility = ["//manman:__subpackages__"],
    deps = [
        "//manman/src:manman_core",
        "@pypi//:httpx",
        "@pypi//:requests",
        "@pypi//:python-jose",
    ],
)

# Aggregate repository layer library for backward compatibility
py_library(
    name = "manman_repository",
    visibility = ["//manman:__subpackages__"],
    deps = [
        ":manman_repository_database",
        ":manman_repository_rabbitmq",
        ":manman_repository_message",
        ":manman_repository_api_client",
    ],
)

# Tests for database repository
py_test(
    name = "database_repository_test",
    srcs = ["database_repository_test.py"],
    deps = [
        ":manman_repository_database",
        "//manman/src:manman_core",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
        "@pypi//:sqlalchemy",  # For testing database components
    ],
    python_version = "PY3",
)

# Tests for validator
py_test(
    name = "validator_test",
    srcs = ["validator_test.py"],
    deps = [
        ":manman_repository_database",
        "//manman/src:manman_core",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
    ],
    python_version = "PY3",
)

# Tests for RabbitMQ utilities - defined in subdirectory
# See manman/src/repository/rabbitmq/BUILD.bazel
alias(
    name = "rabbitmq_util_test",
    actual = "//manman/src/repository/rabbitmq:util_test",
)

# Aggregate test target for backward compatibility
# Note: Only includes tests from the current package
# Subdirectory tests (rabbitmq) are defined in their own BUILD.bazel files
py_test(
    name = "manman_repository_test",
    srcs = [
        "database_repository_test.py",
        "validator_test.py",
    ],
    main = "database_repository_test.py",
    deps = [
        ":manman_repository",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
        "@pypi//:sqlalchemy",  # For testing database components
    ],
    python_version = "PY3",
)