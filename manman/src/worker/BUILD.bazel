load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_test")

# Worker services library  
py_library(
    name = "manman_worker",
    srcs = glob(["**/*.py"], exclude=["*_test.py"]),
    visibility = ["//manman:__subpackages__"],
    deps = [
        "//manman/src:manman_core",
        "//manman/clients:clients",
        "//manman/src/repository:manman_repository",
        "//libs/python/cli:params_base",
        "//libs/python/cli:types",
        "//libs/python/cli/providers/logging",
        "//libs/python/cli/providers/rabbitmq",
        "@pypi//:amqpstorm",
        "@pypi//:typer",
        "@pypi//:requests",
        "@pypi//:python-jose",
    ],
)

# Binary target for worker service
py_binary(
    name = "worker",
    srcs = ["main.py"],
    main = "main.py",
    deps = [":manman_worker"],
    visibility = ["//manman:__pkg__"],
)

# Individual test targets for better granularity
py_test(
    name = "server_status_test",
    srcs = ["server_status_test.py"],
    main = "server_status_test.py",
    deps = [
        ":manman_worker",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
    ],
    size = "small",
)

py_test(
    name = "subscriber_multiple_exchanges_test",
    srcs = ["subscriber_multiple_exchanges_test.py"],
    main = "subscriber_multiple_exchanges_test.py",
    deps = [
        ":manman_worker",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
    ],
    size = "small",
)

py_test(
    name = "worker_heartbeat_test",
    srcs = ["worker_heartbeat_test.py"],
    main = "worker_heartbeat_test.py",
    deps = [
        ":manman_worker",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
    ],
    size = "small",
)

py_test(
    name = "worker_shutdown_cascade_test",
    srcs = ["worker_shutdown_cascade_test.py"],
    main = "worker_shutdown_cascade_test.py",
    deps = [
        ":manman_worker",
        "@pypi//:pytest",
        "@pypi//:pytest-asyncio",
    ],
    size = "small",
)