{{/*
Generic service template for ManMan API services
Only creates services for services marked as type "api"
*/}}
{{- range $serviceName, $serviceConfig := .Values.services }}
{{- if and $serviceConfig.enabled (eq $serviceConfig.type "api") }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "manman.serviceFullName" (dict "serviceName" $serviceName "suffix" "service" "Values" $.Values) }}
  namespace: {{ $.Values.namespace }}
  labels:
    {{- include "manman.labels" $ | nindent 4 }}
    app: {{ include "manman.serviceName" (dict "serviceName" $serviceName "Values" $.Values) }}
    component: {{ $serviceConfig.component }}
    service-type: {{ $serviceConfig.type }}
  {{- if $serviceConfig.serviceAnnotations }}
  annotations:
    {{- toYaml $serviceConfig.serviceAnnotations | nindent 4 }}
  {{- end }}
spec:
  type: {{ $serviceConfig.serviceType | default "ClusterIP" }}
  {{- if $serviceConfig.sessionAffinity }}
  sessionAffinity: {{ $serviceConfig.sessionAffinity }}
  {{- end }}
  selector:
    {{- include "manman.serviceSelectorLabels" (dict "serviceName" $serviceName "Values" $.Values) | nindent 4 }}
  ports:
    - protocol: TCP
      port: {{ $serviceConfig.port }}
      targetPort: {{ $serviceConfig.port }}
      name: http
      {{- if and (eq ($serviceConfig.serviceType | default "ClusterIP") "NodePort") $serviceConfig.nodePort }}
      nodePort: {{ $serviceConfig.nodePort }}
      {{- end }}
    {{- if $serviceConfig.extraPorts }}
    {{- toYaml $serviceConfig.extraPorts | nindent 4 }}
    {{- end }}
{{- end }}
{{- end }}