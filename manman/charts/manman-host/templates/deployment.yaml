{{/*
Generic deployment template for all ManMan services
Supports both API services (with HTTP ports/probes) and processor services (headless)
*/}}
{{- range $serviceName, $serviceConfig := .Values.services }}
{{- if $serviceConfig.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "manman.serviceFullName" (dict "serviceName" $serviceName "Values" $.Values) }}
  namespace: {{ $.Values.namespace }}
  labels:
    {{- include "manman.labels" $ | nindent 4 }}
    app: {{ include "manman.serviceName" (dict "serviceName" $serviceName "Values" $.Values) }}
    component: {{ $serviceConfig.component }}
    service-type: {{ $serviceConfig.type }}
  annotations:
    {{- if $serviceConfig.annotations }}
    {{- toYaml $serviceConfig.annotations | nindent 4 }}
    {{- end }}
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: {{ $serviceConfig.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "manman.serviceSelectorLabels" (dict "serviceName" $serviceName "Values" $.Values) | nindent 6 }}
  template:
    metadata:
      namespace: {{ $.Values.namespace }}
      labels:
        {{- include "manman.labels" $ | nindent 8 }}
        {{- include "manman.serviceSelectorLabels" (dict "serviceName" $serviceName "Values" $.Values) | nindent 8 }}
        component: {{ $serviceConfig.component }}
        service-type: {{ $serviceConfig.type }}
      {{- if $serviceConfig.podAnnotations }}
      annotations:
        {{- toYaml $serviceConfig.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if $serviceConfig.serviceAccount }}
      serviceAccountName: {{ $serviceConfig.serviceAccount }}
      {{- end }}
      {{- if $serviceConfig.securityContext }}
      securityContext:
        {{- toYaml $serviceConfig.securityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ printf "manman-%s" $serviceName }}
          image: "{{ $serviceConfig.image.name }}:{{ $serviceConfig.image.tag }}"
          {{- if $serviceConfig.securityContext }}
          securityContext:
            {{- toYaml $serviceConfig.securityContext | nindent 12 }}
          {{- end }}
          resources:
            {{- if $serviceConfig.resources }}
            {{- toYaml $serviceConfig.resources | nindent 12 }}
            {{- else }}
            {{- include "manman.defaultResources" $ | nindent 12 }}
            {{- end }}
          {{- if eq $serviceConfig.type "api" }}
          ports:
            - containerPort: {{ $serviceConfig.port }}
              name: http
          {{- end }}
          args:
            {{- include "manman.commonArgs" $serviceConfig | nindent 12 }}
          {{- if eq $serviceConfig.type "api" }}
          livenessProbe:
            httpGet:
              path: {{ $serviceConfig.healthPath | default "/health" }}
              port: {{ $serviceConfig.port }}
            initialDelaySeconds: {{ $serviceConfig.livenessProbe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ $serviceConfig.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ $serviceConfig.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ $serviceConfig.livenessProbe.failureThreshold | default 3 }}
          readinessProbe:
            httpGet:
              path: {{ $serviceConfig.healthPath | default "/health" }}
              port: {{ $serviceConfig.port }}
            initialDelaySeconds: {{ $serviceConfig.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ $serviceConfig.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ $serviceConfig.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ $serviceConfig.readinessProbe.failureThreshold | default 3 }}
          {{- else if eq $serviceConfig.type "processor" }}
          {{- if $serviceConfig.healthPort }}
          ports:
            - containerPort: {{ $serviceConfig.healthPort }}
              name: health
          livenessProbe:
            httpGet:
              path: {{ $serviceConfig.healthPath | default "/health" }}
              port: {{ $serviceConfig.healthPort }}
            initialDelaySeconds: {{ $serviceConfig.livenessProbe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ $serviceConfig.livenessProbe.periodSeconds | default 20 }}
            timeoutSeconds: {{ $serviceConfig.livenessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ $serviceConfig.livenessProbe.failureThreshold | default 3 }}
          readinessProbe:
            httpGet:
              path: {{ $serviceConfig.healthPath | default "/health" }}
              port: {{ $serviceConfig.healthPort }}
            initialDelaySeconds: {{ $serviceConfig.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ $serviceConfig.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ $serviceConfig.readinessProbe.timeoutSeconds | default 5 }}
            failureThreshold: {{ $serviceConfig.readinessProbe.failureThreshold | default 3 }}
          {{- end }}
          {{- end }}
          env:
            {{- include "manman.commonEnv" (dict "serviceName" $serviceName "Values" $.Values) | nindent 12 }}
            {{- if $serviceConfig.extraEnv }}
            {{- toYaml $serviceConfig.extraEnv | nindent 12 }}
            {{- end }}
          {{- if $serviceConfig.volumeMounts }}
          volumeMounts:
            {{- toYaml $serviceConfig.volumeMounts | nindent 12 }}
          {{- end }}
      {{- if $serviceConfig.volumes }}
      volumes:
        {{- toYaml $serviceConfig.volumes | nindent 8 }}
      {{- end }}
      {{- if $serviceConfig.nodeSelector }}
      nodeSelector:
        {{- toYaml $serviceConfig.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $serviceConfig.tolerations }}
      tolerations:
        {{- toYaml $serviceConfig.tolerations | nindent 8 }}
      {{- end }}
      {{- if $serviceConfig.affinity }}
      affinity:
        {{- toYaml $serviceConfig.affinity | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}