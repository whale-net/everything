# ManMan Kubernetes Secrets - Production Template
#
# This file shows how to properly handle secrets in Kubernetes.
# DO NOT commit this file with real credentials!
#
# Usage:
#   1. Fill in real values
#   2. Apply: kubectl apply -f manman-secrets.yaml
#   3. Delete this file or encrypt it with SOPS/Sealed Secrets
#
# Alternative: Use External Secrets Operator or cloud secret managers

---
# Database credentials
apiVersion: v1
kind: Secret
metadata:
  name: manman-postgres-credentials
  namespace: manman
type: Opaque
stringData:
  # Replace with actual connection string
  MANMAN_POSTGRES_URL: "postgresql+psycopg2://user:password@postgres.prod:5432/manman"

---
# RabbitMQ credentials
apiVersion: v1
kind: Secret
metadata:
  name: manman-rabbitmq-credentials
  namespace: manman
type: Opaque
stringData:
  MANMAN_RABBITMQ_HOST: "rabbitmq.prod.example.com"
  MANMAN_RABBITMQ_PORT: "5672"
  MANMAN_RABBITMQ_USER: "manman-prod"
  MANMAN_RABBITMQ_PASSWORD: "CHANGE_ME_SECURE_PASSWORD"
  MANMAN_RABBITMQ_ENABLE_SSL: "true"
  MANMAN_RABBITMQ_SSL_HOSTNAME: "rabbitmq.prod.example.com"

---
# Application configuration (non-secret)
apiVersion: v1
kind: ConfigMap
metadata:
  name: manman-config
  namespace: manman
data:
  APP_ENV: "production"
  MANMAN_RABBITMQ_PORT: "5672"
  MANMAN_RABBITMQ_ENABLE_SSL: "true"
  MANMAN_LOG_OTLP: "true"

---
# OpenTelemetry configuration (non-secret)
apiVersion: v1
kind: ConfigMap
metadata:
  name: manman-otel-config
  namespace: manman
data:
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://otel-collector:4317"
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://otel-collector:4317"
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "http://otel-collector:4317"
