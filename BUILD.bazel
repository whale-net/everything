load("@rules_python//python:defs.bzl", "py_library")

# Export files needed by other packages
exports_files([
    "pyproject.toml",
    "uv.lock",
    "MODULE.bazel",
    "MODULE.bazel.lock",
])

# Root Python library
py_library(
    name = "root",
    srcs = ["__init__.py"],
    visibility = ["//visibility:public"],
)

# Cross-compilation verification test
# This test is marked as "manual" so it doesn't run with `bazel test //...`
# It requires Docker and breaks the Bazel sandbox (calls bazel build/run internally)
# CI explicitly runs this test to ensure cross-compilation works correctly
sh_test(
    name = "test_cross_compilation",
    size = "large",
    srcs = ["test_cross_compilation.sh"],
    tags = [
        "manual",  # Don't run with //...
        "requires-network",  # Needs Docker and external bazel invocations
        "integration",  # Integration test, not unit test
    ],
    timeout = "long",
)

# Go setup
# gazelle:prefix github.com/example/everything
# gazelle(name = "gazelle")

# gazelle(
#     name = "gazelle-update-repos",
#     args = [
#         "-from_file=go.mod",
#         "-to_macro=deps.bzl%go_dependencies",
#         "-prune",
#     ],
#     command = "update-repos",
# )