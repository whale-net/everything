load("@rules_uv//uv:pip.bzl", "pip_compile")
load("@gazelle//:def.bzl", "gazelle")
load("@rules_python//python:defs.bzl", "py_library")
load("//tools:test.bzl", "test_suite")

# Python dependencies
pip_compile(
    name = "pip_compile",
    requirements_in = "requirements.in",
    requirements_txt = "requirements.lock.txt",
)

# Root Python library
py_library(
    name = "root",
    srcs = ["__init__.py"],
    visibility = ["//visibility:public"],
)

# Go setup
# gazelle:prefix github.com/example/everything
gazelle(name = "gazelle")

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)

# Convenient aliases
alias(
    name = "run-python",
    actual = "//hello_python:hello_python",
)

alias(
    name = "run-go", 
    actual = "//hello_go:hello_go",
)

alias(
    name = "init-go-cache",
    actual = "//tools:init_go_cache",
)

alias(
    name = "go-env-info",
    actual = "//tools:go_env_info",
)

# Single comprehensive test suite using Bazel's native incremental capabilities
test_suite(name = "test")

# Convenient aliases for backward compatibility
alias(
    name = "test_all",
    actual = ":test",
)

alias(
    name = "test_quick", 
    actual = ":test",
)

alias(
    name = "test_integration",
    actual = ":test",
)

alias(
    name = "test_ci",
    actual = ":test",
)

alias(
    name = "test_incremental", 
    actual = ":test",
)